<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on RQ MA</title><link>/zh/posts/</link><description>Recent content in Posts on RQ MA</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; {year} Ruiqi Ma</copyright><lastBuildDate>Wed, 12 May 2021 17:29:57 +0800</lastBuildDate><atom:link href="/zh/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>JavaScript排序算法</title><link>/zh/posts/js-sort/</link><pubDate>Wed, 12 May 2021 17:29:57 +0800</pubDate><guid>/zh/posts/js-sort/</guid><description>冒泡排序 基础 思路： 比较相邻的元素。如果第一个比第二个大，就交换他们两个。 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的</description></item><item><title>JavaScript数组操作方法</title><link>/zh/posts/js-array/</link><pubDate>Thu, 29 Apr 2021 10:22:34 +0800</pubDate><guid>/zh/posts/js-array/</guid><description>遍历方法 for for(var i = 0 ; i &amp;lt; array.length ; i++){ ... } forEach 和 map forEach array1.forEach((currentValue,index,array2) =&amp;gt; { ... }) map map会将return的值组成一个新数组返回，其他的跟forEach一样。 var newMap = array1.map((currentValue,index,array2) =&amp;gt; { return...; }) 以下以</description></item><item><title>安装Opencv4nodejs的坑</title><link>/zh/posts/appium-install-opencv4nodejs/</link><pubDate>Thu, 12 Nov 2020 15:46:05 +0800</pubDate><guid>/zh/posts/appium-install-opencv4nodejs/</guid><description>基本信息 太长不看只要正确步骤 走过的路&amp;amp;踩过的坑 基本信息 平台：Win10 安装目的：使用Appium提供的Finding and Interacting with Image Elements功</description></item><item><title>游戏脚本-自动生产 Android Python Appium</title><link>/zh/posts/appium-jiangnan-script-auto-well/</link><pubDate>Sat, 07 Nov 2020 21:22:22 +0800</pubDate><guid>/zh/posts/appium-jiangnan-script-auto-well/</guid><description>整体思路 第一步：自动打开游戏 问题：Appium打开app会清空用户登录信息 解决路径 Appium Desired Capabilities 第二步：swipe界面到水井所在位置 第三步：点击水井进行生产 1.</description></item><item><title>VSCode+Python+Appium安装及简单示例</title><link>/zh/posts/appium-python/</link><pubDate>Thu, 05 Nov 2020 23:22:42 +0800</pubDate><guid>/zh/posts/appium-python/</guid><description>首先完成安装的准备工作 Getting Started with Python in VS Code 安装Appium Getting Started - Appium npm install -g appium 安装特定的驱动 Requirements: Java8正确安装 接下来，安装The UiAutomator2 Driver (for Android apps) 配置PATH 配置JA</description></item><item><title>Dart异步、Flutter FutureBuilder class</title><link>/zh/posts/flutter-futurebuilder/</link><pubDate>Sun, 20 Sep 2020 21:22:22 +0800</pubDate><guid>/zh/posts/flutter-futurebuilder/</guid><description>问题描述 解决方案 Dart异步——Future，async，await Flutter——FutureBuilder&amp;lt;T&amp;gt; class 最关键的两部分 本例</description></item><item><title>JavaScript属性类型</title><link>/zh/posts/js-properties/</link><pubDate>Tue, 28 Apr 2020 23:22:42 +0800</pubDate><guid>/zh/posts/js-properties/</guid><description>数据属性 访问器属性 读取属性的特性 判断是否包含某属性和 in 操作符 获取属性 for-in——所有枚举属性 Object.keys()——可枚举实例属性的字符串数</description></item><item><title>JavaScript函数的定义及使用</title><link>/zh/posts/js-function/</link><pubDate>Mon, 27 Apr 2020 20:34:45 +0800</pubDate><guid>/zh/posts/js-function/</guid><description>定义函数 函数声明 函数表达式 函数的使用 作为其他函数参数 作为其他函数的返回值 递归 执行环境、作用域链、活动对象 闭包 定义函数 定义函数有两种方式，总结这两种定义</description></item><item><title>JavaScript继承方法详解</title><link>/zh/posts/js-inherit/</link><pubDate>Sat, 25 Apr 2020 21:22:22 +0800</pubDate><guid>/zh/posts/js-inherit/</guid><description>new 操作的实现原理 使用原型链进行继承 instanceof 操作符、isPrototypeOf() 方法 问题 借用构造函数 问题 组合继承 不足：会调用两次超类型构造函数 原型式继承 寄生</description></item><item><title>JavaScript创建对象模式</title><link>/zh/posts/js-createobj/</link><pubDate>Sat, 25 Apr 2020 17:06:58 +0800</pubDate><guid>/zh/posts/js-createobj/</guid><description>工厂模式 构造函数模式 原型模式 原型与原型链 构造函数、原型和实例的关系 原型的动态性 原型模式的缺点 组合使用构造函数模式和原型模式（用得最多） 动态原型模式 寄生</description></item><item><title>script加载方式以及元素属性</title><link>/zh/posts/js-load-script/</link><pubDate>Thu, 23 Apr 2020 15:05:39 +0800</pubDate><guid>/zh/posts/js-load-script/</guid><description>解释器对&amp;lt;script&amp;gt;中内容的加载方式 解析嵌入式JavaScript代码：在解释器对&amp;lt;script&amp;gt;;元素内部的所有代码求值</description></item><item><title>vue-cli3 跨域配置-含示例</title><link>/zh/posts/vue-cli3-cross-domain-configuration/</link><pubDate>Thu, 12 Mar 2020 14:18:48 +0800</pubDate><guid>/zh/posts/vue-cli3-cross-domain-configuration/</guid><description>安装axios 在项目目录下运行：cnpm install --save axios vue-axios. 示例 以在main.js中连接后台为例，其他页面在axios前加上this.即可。 main.js import Vue from 'vue' //重要！！</description></item><item><title>vscode vue环境搭建+配置eslint和prettier</title><link>/zh/posts/vue-environment-building-configuration-eslint-and-prettier/</link><pubDate>Wed, 04 Mar 2020 17:35:05 +0800</pubDate><guid>/zh/posts/vue-environment-building-configuration-eslint-and-prettier/</guid><description>安装Node.js、cnpm、webpack、vue-cli 在cmd新建vue项目进行测试 安装vscode、插件vetur、插件eslint、插件pr</description></item><item><title>导致页面白屏的原因</title><link>/zh/posts/solutions-reason-for-white-screen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/posts/solutions-reason-for-white-screen/</guid><description>script脚本阻塞DOM渲染 直接使用&amp;lt;script&amp;gt;，html会按照顺序来加载并执行脚本。 在脚本加载和执行的过程中，会阻塞后续的DOM渲</description></item></channel></rss>